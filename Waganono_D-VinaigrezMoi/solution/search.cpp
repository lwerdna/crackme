#include <windows.h>
#include <stdio.h>

unsigned char foo[] =
{
    0x10, 0x2C, 0x36, 0x3C, 0x65, 0x3C, 0x2A, 0x27, // .,6<e<*'
    0xBB, 0x65, 0x21, 0x37, 0x33, 0x33, 0x37, 0x21, // .e!7337!
    0x37, 0x37, 0x72, 0x58, 0x4F, 0x02, 0x30, 0x72, // 77rXO.0r
    0x21, 0x20, 0x3E, 0x30, 0x29, 0x33, 0x36, 0x72, // ! >0)36r
    0x31, 0x2A, 0x3D, 0x3C, 0x24, 0xB8, 0x31, 0x20, // 1*=<$.1 
    0x37, 0x65, 0xB3, 0x72, 0x28, 0x33, 0x37, 0x24, // 7e.r(37$
    0x37, 0x2C, 0x3F, 0x3E, 0x20, 0x76, 0x29, 0x75, // 7,?> v)u
    0x33, 0x31, 0x27, 0x33, 0x34, 0x23, 0x20, 0x72, // 31'34# r
    0x31, 0x2A, 0x3D, 0x26, 0x37, 0x33, 0x65, 0x3E, // 1*=&73e>
    0x37, 0x65, 0x30, 0x3A, 0x2C, 0x30, 0x23, 0x20, // 7e0:,0# 
    0x37, 0x65, 0x37, 0x37, 0x65, 0x20, 0x2C, 0x35, // 7e77e ,5
    0x37, 0x2B, 0xBB, 0x20, 0x20, 0x77, 0x4F, 0x17, // 7+.  wO.
    0x26, 0x65, 0x3C, 0x27, 0x2C, 0x7A, 0x65, 0x31, // &e<',ze1
    0x75, 0x20, 0x20, 0x26, 0x65, 0x34, 0x2C, 0x37, // u  &e4,7
    0x3C, 0x65, 0x26, 0x3C, 0x65, 0x35, 0x2D, 0x3B, // <e&<e5-;
    0x34, 0x23, 0x21, 0x37, 0x65, 0x32, 0x20, 0x72, // 4#!7e2 r
    0x24, 0x2C, 0x34, 0x37, 0x2B, 0xBE, 0x37, 0x37, // $,47+.77
    0x7E, 0x65, 0x30, 0x37, 0x37, 0x22, 0x20, 0x21, // ~e077" !
    0x72, 0x30, 0x3D, 0x72, 0x35, 0x33, 0x30, 0x72, // r0=r530r
    0x31, 0x24, 0x3E, 0x3D, 0x30, 0x30, 0x29, 0xBB, // 1$>=00).
    0x7E, 0x4F, 0x36, 0x3C, 0x65, 0x33, 0x23, 0x34, // ~O6<e3#4
    0x37, 0x31, 0x73, 0x33, 0x30, 0x76, 0x29, 0x3B, // 71s30v);
    0x37, 0x30, 0x73, 0x36, 0x20, 0x76, 0x23, 0x33, // 70s6 v#3
    0x3B, 0x37, 0x36, 0x72, 0x30, 0x38, 0x65, 0x36, // ;76r08e6
    0xBB, 0x26, 0x32, 0x3E, 0x24, 0x31, 0x20, 0x72, // .&2>$1 r
    0x21, 0x20, 0x3F, 0x3D, 0x2B, 0x76, 0x29, 0x33, // ! ?=+v)3
    0x72, 0x33, 0x32, 0x3E, 0x20, 0x23, 0x37, 0x72, // r32> #7r
    0x36, 0x20, 0x73, 0x3E, 0x24, 0x76, 0x26, 0x3E, // 6 s>$v&>
    0xBB, 0x69, 0x73, 0x3D, 0x2B, 0x76, 0x20, 0x34, // .is=+v 4
    0x34, 0x20, 0x30, 0x26, 0x30, 0x33, 0x4F, 0x27, // 4 0&03O'
    0x3C, 0x65, 0x2B, 0x3D, 0x37, 0x7A, 0x34, 0x27, // <e+=7z4'
    0x3B, 0x65, 0x21, 0x37, 0x33, 0x3F, 0x20, 0x3C, // ;e!73? <
    0x26, 0x65, 0xB3, 0x72, 0x23, 0x37, 0x2C, 0x20, // &e.r#7, 
    0x37, 0x37, 0x73, 0x27, 0x2B, 0x33, 0x65, 0x21, // 77s'+3e!
    0x27, 0x27, 0x20, 0x26, 0x2C, 0x22, 0x30, 0x26, // '' &,"0&
    0x3B, 0x2A, 0x3D, 0x7E, 0x65, 0x35, 0x20, 0x72, // ;*=~e5 r
    0x23, 0x30, 0x3A, 0x72, 0x37, 0x33, 0x33, 0x3B, // #0:r733;
    0x37, 0x2B, 0x27, 0x72, 0x24, 0x23, 0x65, 0x3F, // 7+'r$#e?
    0xB8, 0x28, 0x36, 0x72, 0x35, 0x24, 0x2A, 0x30, // .(6r5$*0
    0x3E, 0xAD, 0x3E, 0x37, 0x4F, 0x33, 0x2B, 0x72, // >.>7O3+r
    0x34, 0x2C, 0x3D, 0x72, 0x21, 0x33, 0x65, 0x31, // 4,=r!3e1
    0x3D, 0x28, 0x23, 0x26, 0x20, 0x78, 0x4F, 0x58, // =(#& xOX
    0x1E, 0x24, 0x73, 0x3F, 0xAC, 0x22, 0x2D, 0x3D, // .$s?."-=
    0x36, 0x20, 0x73, 0x3E, 0x24, 0x76, 0x35, 0x3E, // 6 s>$v5>
    0x27, 0x36, 0x73, 0x31, 0x29, 0x37, 0x36, 0x21, // '6s1)76!
    0x3B, 0x34, 0x26, 0x37, 0x65, 0x35, 0x2A, 0x3C, // ;4&7e5*<
    0x21, 0x2C, 0x20, 0x26, 0x20, 0x76, 0xA5, 0x72, // !, & v.r
    0x27, 0x31, 0x3A, 0x3E, 0x2C, 0x25, 0x20, 0x20, // '1:>,%  
    0x72, 0x29, 0x74, 0x1B, 0x06, 0x76, 0x34, 0x27, // r)t..v4'
    0x3B, 0x65, 0x36, 0x21, 0x31, 0x76, 0x29, 0x75, // ;e6!1v)u
    0x3B, 0x2B, 0x37, 0x3B, 0x26, 0x33, 0x65, 0x36, // ;+7;&3e6
    0x37, 0x65, 0x30, 0x3D, 0xAA, 0x38, 0x26, 0x3B, // 7e0=.8&;
    0x36, 0x20, 0x3D, 0x31, 0x20, 0x5C, 0x20, 0x3C, // 6 =1 \ <
    0x26, 0x37, 0x36, 0x72, 0x21, 0x33, 0x30, 0x2A, // &76r!30*
    0x72, 0x31, 0x36, 0x2A, 0x31, 0x33, 0x36, 0x72, // r16*136r
    0x22, 0x30, 0x3A, 0x21, 0x65, 0xB6, 0x65, 0x34, // "0:!e.e4
    0x33, 0x2C, 0x21, 0x37, 0x65, 0x23, 0x2B, 0x37, // 3,!7e#+7
    0x72, 0x24, 0x3D, 0x33, 0x29, 0x2F, 0x36, 0x37, // r$=3)/67
    0x72, 0x23, 0x21, 0xBB, 0x34, 0x23, 0x20, 0x3C, // r#!.4# <
    0x26, 0x2C, 0x36, 0x3E, 0x29, 0x33, 0x69, 0x72, // &,6>)3ir
    0x37, 0x2B, 0x73, 0x37, 0x23, 0x30, 0x20, 0x26, // 7+s7#0 &
    0x72, 0x26, 0x3C, 0x3F, 0x28, 0x33, 0x65, 0x24, // r&<?(3e$
    0x3D, 0x30, 0x20, 0x72, 0x36, 0x37, 0x33, 0x3B, // =0 r673;
    0x37, 0x3F, 0x59, 0x23, 0x30, 0x33, 0x65, 0x3E, // 7?Y#03e>
    0x37, 0x65, 0x3E, 0x37, 0x36, 0x25, 0x24, 0x35, // 7e>76%$5
    0x37, 0x65, 0xBA, 0x26, 0x24, 0x3F, 0x31, 0x72, // 7e.&$?1r
    0xBB, 0x26, 0x21, 0x3B, 0x31, 0x76, 0x20, 0x3C, // .&!;1v <
    0x72, 0x23, 0x21, 0x33, 0x2B, 0xB1, 0x24, 0x3B, // r#!3+.$;
    0x21, 0x69, 0x73, 0x24, 0x2A, 0x23, 0x36, 0x72, // !is$*#6r
    0x22, 0x2A, 0x26, 0x24, 0x2C, 0x33, 0x3F, 0x72, // "*&$,3?r
    0x21, 0x30, 0x23, 0x22, 0x2A, 0x25, 0x20, 0x20, // !0#"*%  
    0x72, 0x34, 0x26, 0x37, 0x65, 0x3A, 0x24, 0x72, // r4&7e:$r
    0x3E, 0x20, 0x27, 0x26, 0x37, 0x33, 0x65, 0x3E, // > '&73e>
    0x33, 0x65, 0x23, 0x3E, 0x30, 0x25, 0x4F, 0x34, // 3e#>0%O4
    0x20, 0xAC, 0x22, 0x27, 0x20, 0x38, 0x31, 0x37, //  ."' 817
    0x72, 0x28, 0x3A, 0x21, 0x65, 0xB6, 0x65, 0x22, // r(:!e.e"
    0x33, 0x37, 0x27, 0x72, 0x29, 0x33, 0x65, 0x75, // 37'r)3eu
    0x37, 0x62, 0x73, 0x37, 0x36, 0x22, 0x65, 0x3E, // 7bs76"e>
    0x75, 0x20, 0x20, 0x22, 0x24, 0x35, 0x20, 0x7C, // u  "$5 |
    0x58, 0x16, 0x3A, 0x72, 0x31, 0x23, 0x65, 0x37, // X.:r1#e7
    0x21, 0x65, 0x3E, 0x3D, 0x31, 0x3F, 0x33, 0xBB, // !e>=1?3.
    0x7E, 0x65, 0x27, 0x27, 0x65, 0x26, 0x20, 0x27, // ~e''e& '
    0x2A, 0x65, 0xBA, 0x31, 0x37, 0x3F, 0x37, 0x37, // *e.17?77
    0x72, 0x30, 0x3D, 0x72, 0x35, 0x33, 0x31, 0x3B, // r0=r531;
    0x26, 0x65, 0x27, 0x27, 0x31, 0x39, 0x37, 0x3B, // &e''197;
    0x33, 0x29, 0x73, 0x21, 0x30, 0x24, 0x65, 0x3E, // 3)s!0$e>
    0x33, 0x65, 0x27, 0x37, 0x26, 0x3E, 0x2B, 0x3B, // 3e'7&>+;
    0x23, 0x30, 0x36, 0x72, 0x31, 0x23, 0x65, 0x33, // #06r1#e3
    0x21, 0x65, 0x36, 0x3F, 0x35, 0x3A, 0x2A, 0x2B, // !e6?5:*+
    0xBB, 0x20, 0x7D, 0x58, 0x4F, 0x13, 0x2B, 0x31, // . }XO.+1
    0x3D, 0x37, 0x36, 0x72, 0x28, 0x33, 0x37, 0x31, // =76r(371
    0x3B, 0x65, 0x37, 0x75, 0x24, 0x20, 0x2A, 0x3B, // ;e7u$ *;
    0x20, 0x65, 0x30, 0x33, 0x36, 0x25, 0xAC, 0x72, //  e036%.r
    0x31, 0x20, 0x73, 0x36, 0xAC, 0x30, 0x2C, 0x7C, // 1 s6.0,|
    0x58, 0x4F, 0x15, 0x3B, 0x2B, 0x3F, 0x36, 0x21, // XO.;+?6!
    0x3D, 0x2B, 0x20, 0x72, 0x36, 0x23, 0x37, 0x72, // =+ r6#7r
    0x31, 0x20, 0x20, 0x72, 0x34, 0x23, 0x20, 0x3E, // 1  r4# >
    0x23, 0x30, 0x36, 0x21, 0x65, 0x26, 0x24, 0x20, // #06!e&$ 
    0x3D, 0x29, 0x36, 0x21, 0x65, 0x7E, 0x36, 0x3D, // =)6!e~6=
    0x27, 0x33, 0x36, 0x3C, 0x2C, 0x24, 0x65, 0x21, // '36<,$e!
    0x3D, 0x30, 0x25, 0x37, 0x2B, 0x3F, 0x37, 0x7B, // =0%7+?7{
    0x68, 0x4F, 0x59, 0x72, 0x65, 0x76, 0x65, 0x03, // hOYreve.
    0x27, 0x24, 0x3D, 0x36, 0x65, 0x3F, 0x29, 0x21, // '$=6e?)!
    0x72, 0x36, 0x3C, 0x3C, 0x31, 0x76, 0x31, 0x3D, // r6<<1v1=
    0x27, 0x36, 0x73, 0x3C, 0x20, 0x23, 0x23, 0x21, // '6s< ##!
    0x7E, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x34, 0x27, // ~Osrev4'
    0x75, 0x2C, 0x3F, 0x21, 0x65, 0x25, 0x2A, 0x20, // u,?!e%* 
    0x26, 0x20, 0x3D, 0x26, 0x65, 0x32, 0x20, 0x72, // & =&e2 r
    0x3E, 0x62, 0x3C, 0x37, 0x30, 0x30, 0x69, 0x58, // >b<700iX
    0x72, 0x65, 0x73, 0x72, 0x21, 0x23, 0x65, 0x31, // resr!#e1
    0x3D, 0x26, 0x3C, 0x3C, 0x6B, 0x5C, 0x65, 0x72, // =&<<k\er
    0x72, 0x65, 0x07, 0x3D, 0x30, 0x25, 0x65, 0x3E, // re.=0%e>
    0x37, 0x36, 0x73, 0x38, 0x20, 0x23, 0x2B, 0x37, // 76s8 #+7
    0x21, 0x65, 0x31, 0x3E, 0x24, 0x38, 0x26, 0x21, // !e1>$8&!
    0x72, 0x27, 0x36, 0x31, 0x36, 0x5C, 0x65, 0x72, // r'616\er
    0x72, 0x65, 0x23, 0x20, 0x20, 0x38, 0x2B, 0x37, // re#  8+7
    0x3C, 0x31, 0x73, 0x3E, 0x20, 0x25, 0x65, 0x24, // <1s> %e$
    0x3B, 0x20, 0x26, 0x2A, 0x65, 0x3B, 0x20, 0x31, // ; &*e; 1
    0x21, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x35, 0x3D, // !Osrev5=
    0x27, 0x37, 0x73, 0x36, 0x20, 0x25, 0x65, 0x31, // '7s6 %e1
    0x3D, 0x2B, 0x20, 0x7C, 0x4F, 0x5C, 0x65, 0x72, // =+ |O\er
    0x72, 0x65, 0x02, 0x27, 0x24, 0x38, 0x21, 0x72, // re.'$8!r
    0x3B, 0x29, 0x20, 0x72, 0x36, 0x39, 0x2B, 0x26, // ;) r69+&
    0x72, 0x33, 0x36, 0x3C, 0x30, 0x25, 0x69, 0x58, // r36<0%iX
    0x72, 0x65, 0x73, 0x72, 0x29, 0x33, 0x36, 0x72, // resr)36r
    0x26, 0xAF, 0x27, 0x37, 0x36, 0x76, 0x26, 0x3A, // &.'76v&:
    0x37, 0x2B, 0x26, 0x37, 0x36, 0x7A, 0x4F, 0x72, // 7+&76zOr
    0x72, 0x65, 0x73, 0x3E, 0x20, 0x25, 0x65, 0x35, // res> %e5
    0x20, 0x2C, 0x20, 0x3D, 0x2B, 0x25, 0x6B, 0x58, //  , =+%kX
    0x72, 0x65, 0x73, 0x72, 0x11, 0x39, 0x30, 0x21, // resr.90!
    0x72, 0x29, 0x36, 0x21, 0x65, 0x20, 0x2C, 0x37, // r)6!e ,7
    0x27, 0x3D, 0x73, 0x34, 0x2A, 0x23, 0x37, 0x3C, // '=s4*#7<
    0x37, 0x24, 0x26, 0x2A, 0x4F, 0x76, 0x65, 0x72, // 7$&*Over
    0x72, 0x35, 0x21, 0x37, 0x2B, 0x38, 0x20, 0x3C, // r5!7+8 <
    0x26, 0x65, 0x3F, 0x37, 0x36, 0x76, 0x2F, 0x37, // &e?76v/7
    0x27, 0x2B, 0x3C, 0x26, 0x36, 0x5C, 0x65, 0x72, // '+<&6\er
    0x72, 0x65, 0x23, 0x3D, 0x30, 0x24, 0x65, 0x36, // re#=0$e6
    0x37, 0x36, 0x73, 0x31, 0x2A, 0x38, 0x36, 0x7C, // 76s1*86|
    0x58, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x08, 0x3D, // XOsrev.=
    0x3B, 0x65, 0x22, 0x27, 0x2C, 0x76, 0x27, 0x33, // ;e"',v'3
    0x3E, 0x24, 0x3D, 0x31, 0x20, 0x76, 0x20, 0x3C, // >$=1 v <
    0x26, 0x37, 0x36, 0x72, 0x21, 0x33, 0x30, 0x2A, // &76r!30*
    0x72, 0x24, 0x34, 0x37, 0x36, 0x5C, 0x65, 0x72, // r$476\er
    0x72, 0x65, 0x19, 0x37, 0x65, 0x3A, 0x20, 0x27, // re.7e: '
    0x20, 0x65, 0x32, 0x36, 0x37, 0x33, 0x36, 0x21, //  e26736!
    0x37, 0x65, 0xB3, 0x72, 0x31, 0x39, 0x30, 0x21, // 7e.r190!
    0x72, 0x30, 0x3D, 0x72, 0x28, 0x33, 0x36, 0x21, // r0=r(36!
    0x33, 0x22, 0x36, 0x7C, 0x4F, 0x5C, 0x17, 0x37, // 3"6|O\.7
    0x34, 0x37, 0x32, 0x3B, 0x2B, 0x6C, 0x4F, 0x72, // 472;+lOr
    0x72, 0x65, 0x73, 0x1E, 0x20, 0x76, 0x31, 0x37, // res. v17
    0x3F, 0x35, 0x20, 0x72, 0x2B, 0x33, 0x65, 0x34, // ?5 r+3e4
    0x33, 0x2C, 0x27, 0x72, 0x37, 0x3F, 0x20, 0x3C, // 3,'r7? <
    0x72, 0xA5, 0x73, 0x3E, 0x62, 0x37, 0x23, 0x34, // r.s>b7#4
    0x33, 0x2C, 0x21, 0x37, 0x6B, 0x5C, 0x65, 0x72, // 3,!7k\er
    0x72, 0x65, 0x02, 0x27, 0x24, 0x38, 0x21, 0x72, // re.'$8!r
    0x3D, 0x2B, 0x73, 0x37, 0x36, 0x22, 0x65, 0x31, // =+s76"e1
    0x3D, 0x2B, 0x7F, 0x72, 0x2A, 0x38, 0x65, 0x37, // =+.r*8e7
    0x21, 0x31, 0x73, 0x31, 0x2A, 0x38, 0x64, 0x58, // !1s1*8dX
    0x72, 0x65, 0x73, 0x72, 0x14, 0x23, 0x62, 0x3D, // resr.#b=
    0x3C, 0x65, 0x32, 0x3B, 0x31, 0x76, 0x77, 0x62, // <e2;1vwb
    0x72, 0x24, 0x3D, 0x21, 0x69, 0x76, 0x34, 0x27, // r$=!iv4'
    0x75, 0x2A, 0x3D, 0x72, 0x36, 0x39, 0x2C, 0x26, // u*=r69,&
    0x72, 0x22, 0x21, 0x33, 0x2B, 0x32, 0x68, 0x22, // r"!3+2h"
    0xBA, 0x37, 0x36, 0x58, 0x65, 0x76, 0x65, 0x72, // .76Xever
    0x03, 0x30, 0x32, 0x3C, 0x21, 0x76, 0x2A, 0x3C, // .02<!v*<
    0x72, 0x20, 0x20, 0x26, 0x65, 0x35, 0x2A, 0x3C, // r  &e5*<
    0x7E, 0x65, 0x3C, 0x3C, 0x65, 0x33, 0x36, 0x26, // ~e<<e36&
    0x72, 0x26, 0x3C, 0x3C, 0x64, 0x5C, 0x4F, 0x72, // r&<<d\Or
    0x72, 0x65, 0x73, 0x17, 0x2B, 0x22, 0x37, 0x37, // res.+"77
    0x72, 0x33, 0x3C, 0x27, 0x36, 0x76, 0x35, 0x3E, // r3<'6v5>
    0x27, 0x36, 0x73, 0x36, 0x20, 0x76, 0x26, 0x3D, // '6s6 v&=
    0x3C, 0x31, 0x21, 0x3D, 0x33, 0x33, 0x37, 0x21, // <1!=337!
    0x37, 0x36, 0x7F, 0x58, 0x65, 0x76, 0x65, 0x72, // 76.Xever
    0x11, 0x2A, 0x3D, 0x21, 0x65, 0x35, 0x24, 0x36, // .*=!e5$6
    0x27, 0x34, 0x26, 0x37, 0x36, 0x76, 0x2A, 0x27, // '4&76v*'
    0x72, 0x26, 0x3C, 0x3C, 0x36, 0x76, 0x21, 0xBB, // r&<<6v!.
    0x30, 0x30, 0x27, 0x33, 0x2B, 0x22, 0x36, 0x7C, // 00'3+"6|
    0x58, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x15, 0x37, // XOsrev.7
    0x26, 0x2C, 0x27, 0x21, 0x65, 0x35, 0x2A, 0x3C, // &,'!e5*<
    0x21, 0x65, 0x37, 0x37, 0x65, 0x3A, 0x24, 0x72, // !e77e:$r
    0x36, 0x20, 0x21, 0x3C, 0x2C, 0xBE, 0x37, 0x37, // 6 !<,.77
    0x72, 0x24, 0x25, 0x37, 0x37, 0x25, 0x20, 0x58, // r$%77% X
    0x72, 0x65, 0x73, 0x72, 0x13, 0x3F, 0x20, 0x27, // resr.? '
    0x2A, 0x65, 0x30, 0x3D, 0x2B, 0x25, 0x65, 0x36, // *e0=+%e6
    0x37, 0x36, 0x73, 0x3C, 0x20, 0x3F, 0x22, 0x37, // 76s< ?"7
    0x21, 0x65, 0x37, 0x75, 0x24, 0x38, 0x31, 0x33, // !e7u$813
    0x3C, 0x65, 0x59, 0x58, 0x13, 0x13, 0x17, 0x01, // <eYX....
    0x17, 0x65, 0x61, 0x68, 0x4F, 0x5C, 0x65, 0x72, // .eahO\er
    0x72, 0x65, 0x05, 0x3D, 0x30, 0x25, 0x65, 0x3E, // re.=0%e>
    0x37, 0x36, 0x73, 0x31, 0x2A, 0x38, 0x36, 0x72, // 76s1*86r
    0x3C, 0x24, 0x3A, 0x21, 0x36, 0x37, 0x2B, 0x26, // <$:!67+&
    0x7E, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x29, 0x37, // ~Osrev)7
    0x21, 0x65, 0x30, 0x3D, 0x2B, 0x25, 0x65, 0x3B, // !e0=+%e;
    0x3C, 0x2B, 0x3C, 0x31, 0x20, 0x38, 0x31, 0x21, // <+<1 81!
    0x7E, 0x4F, 0x73, 0x72, 0x65, 0x76, 0x29, 0x37, // ~Osrev)7
    0x21, 0x65, 0x39, 0x37, 0x30, 0x38, 0x20, 0x21, // !e9708 !
    0x72, 0x26, 0x3C, 0x3C, 0x36, 0x7A, 0x4F, 0x72, // r&<<6zOr
    0x72, 0x65, 0x73, 0x03, 0x30, 0x3F, 0x69, 0x72, // res.0?ir
    0x3C, 0x20, 0x73, 0x3E, 0x20, 0x76, 0x2B, 0x3B, // < s> v+;
    0x37, 0x3F, 0x73, 0x22, 0x24, 0x25, 0x69, 0x72, // 7?s"$%ir
    0x22, 0x37, 0x36, 0x3C, 0x20, 0x2C, 0x65, 0x3E, // "76< ,e>
    0x37, 0x36, 0x73, 0x22, 0x24, 0x26, 0x24, 0x21, // 76s"$&$!
    0x72, 0x35, 0x3C, 0x27, 0x37, 0x76, 0x21, 0x37, // r5<'7v!7
    0x21, 0x65, 0x30, 0x3D, 0x2B, 0x25, 0x6B, 0x58, // !e0=+%kX
    0x72, 0x65, 0x73, 0x72, 0x13, 0x39, 0x30, 0x21, // resr.90!
    0x72, 0x29, 0x36, 0x21, 0x65, 0x35, 0x2A, 0x3C, // r)6!e5*<
    0x21, 0x65, 0x32, 0x35, 0xAC, 0x25, 0x69, 0x58, // !e25.%iX
    0x72, 0x65, 0x73, 0x72, 0x29, 0x33, 0x36, 0x72, // resr)36r
    0x31, 0x2A, 0x3D, 0x21, 0x65, 0x23, 0x36, 0x33, // 1*=!e#63
    0x35, 0xAC, 0x20, 0x7E, 0x4F, 0x76, 0x65, 0x72, // 5. ~Over
    0x72, 0x29, 0x36, 0x21, 0x65, 0x20, 0x2C, 0x37, // r)6!e ,7
    0x27, 0x3D, 0x73, 0x31, 0x2A, 0x38, 0x36, 0x7C, // '=s1*86|
    0x58, 0x65, 0x73, 0x72, 0x65, 0x07, 0x30, 0x3B, // Xesre.0;
    0x7E, 0x65, 0x30, 0x3D, 0x2B, 0x30, 0x20, 0x21, // ~e0=+0 !
    0x21, 0x20, 0x29, 0x7F, 0x29, 0x33, 0x69, 0x72, // ! ).)3ir
    0x22, 0x37, 0x36, 0x3C, 0x20, 0x2C, 0x65, 0x3E, // "76< ,e>
    0x37, 0x36, 0x73, 0x22, 0x62, 0x22, 0x2C, 0x26, // 76s"b",&
    0x21, 0x65, 0x31, 0x3E, 0x20, 0x23, 0x36, 0x72, // !e1> #6r
    0x22, 0x2A, 0x26, 0x20, 0x65, 0x32, 0x20, 0x21, // "*& e2 !
    0x72, 0x26, 0x3C, 0x3C, 0x36, 0x78, 0x4F, 0x58, // r&<<6xOX
    0x72, 0x65, 0x73, 0x72, 0x08, 0xBF, 0x21, 0x3B, // resr..!;
    0x26, 0x20, 0x29, 0x72, 0x29, 0x71, 0x2C, 0x3F, // & )r)q,?
    0x22, 0x24, 0x21, 0x26, 0x2C, 0x37, 0x29, 0x72, // "$!&,7)r
    0x3F, 0x20, 0x20, 0x21, 0x24, 0x31, 0x20, 0x58, // ?  !$1 X
    0x72, 0x65, 0x73, 0x72, 0x21, 0x71, 0x30, 0x3C, // resr!q0<
    0x72, 0x34, 0x26, 0x3B, 0x65, 0x34, 0x24, 0x3E, // r4&;e4$>
    0x33, 0x2B, 0x30, 0x37, 0x65, 0x33, 0x2B, 0x26, // 3+07e3+&
    0x20, 0x20, 0x73, 0x36, 0x20, 0x23, 0x3D, 0x72, //   s6 #=r
    0x33, 0x22, 0x36, 0x21, 0x6B, 0x5C              // 3"6!k\  
};

void main(void)
{
    for(UINT key_pos=0; key_pos<8; ++key_pos)                       // 8 key character positions
    {
        UINT n_normal_record = 0;
        CHAR char_record = 'Z';

        for(CHAR trial_char=' '; trial_char<='~'; ++trial_char)     // trial characters for this position
        {
            UINT n_normal = 0;

            // try decryption, counting the number of normal
            for(UINT i=key_pos; i<0x726; i+=8)
            {
                CHAR xor_result = foo[i] ^ trial_char;

                if(isdigit(xor_result) || isalpha(xor_result) || isspace(xor_result))
                    n_normal++;
            }

            if(n_normal > n_normal_record)
            {
                n_normal_record = n_normal;
                char_record = trial_char;
            }
        }

        printf("key position %d is character %c (%X normal chars)\n", key_pos, char_record, n_normal_record);
    }

    // finds "RESREVER"

    // decrypt and show message
    CHAR key[] = "RESREVER";
    for(UINT i=0; i<0x726; ++i)
    {
        foo[i] ^= key[i%8];

        // replace any French-specific characters with 'e' ???
        if(foo[i] & 0x80)
            foo[i] = 'e';
    }
    printf("%s\n", foo);
}
