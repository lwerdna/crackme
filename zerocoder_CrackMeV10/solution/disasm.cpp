#include <windows.h>
#include <stdio.h>

/* C:\work\zRACKM10.COM (5/31/2009 12:11:48 PM)
   StartOffset: 000000C6, EndOffset: 000001A8, Length: 000000E3 */

unsigned char rawData[226] = {
	0x1B, 0x01, 0x50, 0x01, 0x12, 0x09, 0x1B, 0x01, 0x9C, 0x02, 0x55, 0x0A,
	0x28, 0x01, 0x00, 0x24, 0x21, 0x01, 0x9C, 0x02, 0x0B, 0x42, 0x94, 0x02,
	0x21, 0x01, 0x0C, 0x01, 0x28, 0x01, 0x00, 0x52, 0x13, 0x01, 0x9C, 0x02,
	0x0C, 0x8F, 0x9A, 0x02, 0x21, 0x01, 0x28, 0x01, 0x00, 0x94, 0x00, 0x01,
	0x9A, 0x02, 0x0D, 0x1B, 0x98, 0x02, 0x21, 0x01, 0x0C, 0x01, 0x28, 0x01,
	0x00, 0x71, 0x50, 0x01, 0x9F, 0x02, 0x07, 0x42, 0x96, 0x02, 0x21, 0x01,
	0x1B, 0x01, 0xAE, 0x01, 0x83, 0x09, 0x0C, 0x01, 0x21, 0x01, 0x28, 0x01,
	0x00, 0x83, 0x94, 0x02, 0x96, 0x02, 0x06, 0xEF, 0xBF, 0x01, 0x21, 0x01,
	0x28, 0x01, 0x00, 0x0F, 0x98, 0x02, 0x9C, 0x02, 0x06, 0x1F, 0xC1, 0x01,
	0x21, 0x01, 0x0C, 0x01, 0x28, 0x01, 0x00, 0x63, 0x96, 0x02, 0x94, 0x02,
	0x06, 0xE0, 0xC3, 0x01, 0x21, 0x01, 0x28, 0x01, 0x03, 0x38, 0x94, 0x02,
	0xBF, 0x01, 0x06, 0x1E, 0x8E, 0x02, 0x21, 0x01, 0x1B, 0x01, 0xB9, 0x01,
	0x12, 0x09, 0x00, 0x00, 0x28, 0x01, 0x03, 0x94, 0x96, 0x02, 0x94, 0x02,
	0x06, 0x5A, 0x90, 0x02, 0x21, 0x01, 0x1B, 0x01, 0xB9, 0x01, 0x81, 0x09,
	0x00, 0x00, 0x28, 0x01, 0x03, 0x94, 0x96, 0x02, 0xBF, 0x01, 0x06, 0x84,
	0x92, 0x02, 0x21, 0x01, 0x1B, 0x01, 0xB9, 0x01, 0x3F, 0x09, 0x00, 0x00,
	0x1B, 0x01, 0xBF, 0x01, 0x12, 0x09, 0x00, 0x00, 0x55, 0x32, 0xE7, 0x0B,
	0xCC, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

UINT hex2str(PCHAR p)
{
    UINT r=0;
    while(*p)
    {
        r*=16;
        if(*p>='0' && *p<='9')
            r+=*p-'0';
        else if(*p>='A' && *p<='F')
            r+=*p-'A';
        else if(*p>='a' && *p<='f')
            r+=*p-'a';
        else
            printf("wtf!!!!!\n");
        p++;
    }
    return r;
}

VOID main(INT ac, PCHAR *av)
{
    PWORD vmdata = (PWORD)rawData;

    UINT i=0;
    if(ac>1)
        i=(hex2str(av[1])-0x1C6)/2;

    while(i<113)
    {
        UINT len=1;

        WORD op=vmdata[i];

        printf("%04X: ",0x1C6+2*i);

        switch(op)
        {
            WORD ax,bx,cx,dx,si,di,temp;

            case 0x011B:
                len=3;
                dx=vmdata[i+1];
                ax=vmdata[i+2];

                if((ax&0xFF00)==0x0900)
                    printf("write string (%04X) to stdout\n",dx);
                else if((ax&0xFF00)==0x0A00)
                    printf("buffered input to (%04X)\n",dx);
                else
                    printf("DOS 21h (ax=%04X, dx=%04X)\n",ax,dx);

                break;

            case 0x0128:
                len=6;
                di=vmdata[i+2];
                bx=vmdata[i+3];
                cx=dx=vmdata[i+4]&0xFF;

                printf("chksum dl=%04X +byte[%04X,%04X] ^word[%04X,%04X] -> [%04X] ",dx,bx,bx+cx-1,di,di+cx-1,vmdata[i+5]);

                temp=vmdata[i+1]&0xFF;
                if(temp)
                {
                    if(temp==3)
                        printf("(jz %04X)",0x1C6+2*i+0x16);
                    else
                        printf("wtF!!!!!");
                }

                printf("\n");
                break;

            case 0x121:  // modifies return to VM_fetch
            case 0x10C:  // VM_fetch
                printf("nop\n");
                break;

            case 0:
                printf("exit\n");
                break;

            default:
                printf("dunno (new EIP=%04X)\n",op);
        }

        i+=len;
    }
}
