// 2008 andrewl

#include <windows.h>

#include <stdio.h>

#include "VM_Code.h"

ULONG linear_sequence[] = { 0x00407000, 0x00407016, 0x0040702E, 0x00407041, 0x00407057, 0x0040706F, 0x00407085, 0x0040709D, 0x004070B3, 0x004070CB, 0x004070E1, 0x004070F9, 0x0040710F, 0x00407127, 0x0040713D, 0x00407155, 0x0040716B, 0x00407183, 0x00407193, 0x004071AA, 0x004071BA, 0x004071CA, 0x004071E0, 0x004071F8, 0x0040720E, 0x00407226, 0x00407236, 0x0040724D, 0x0040725D, 0x0040726D, 0x00407283, 0x0040729B, 0x004072AE, 0x004072C7, 0x004072DB, 0x004072EF, 0x00407304, 0x0040731F, 0x00407333, 0x00407354, 0x0040736C, 0x0040737C, 0x00407393, 0x004073A3, 0x004073B3, 0x004073CB, 0x004073E1, 0x004073F9, 0x00407411, 0x00407427, 0x0040743F, 0x00407451, 0x00407467, 0x0040747F, 0x00407495, 0x004074AD, 0x004074BF, 0x004074D8, 0x004074EE, 0x00407506, 0x0040751B, 0x0040752D, 0x0040753F, 0x00407555, 0x0040756D, 0x00407585, 0x0040759B, 0x004075B3, 0x004075C5, 0x004075D5, 0x004075EA, 0x004075FA, 0x00407611, 0x00407621, 0x00407631, 0x00407647, 0x0040765F, 0x00407677, 0x0040768D, 0x004076A5, 0x004076B7, 0x004076CD, 0x004076E5, 0x004076FB, 0x00407713, 0x00407725, 0x0040773E, 0x00407754, 0x0040776C, 0x00407783, 0x00407799, 0x004077B1, 0x004077C7, 0x004077DF, 0x004077F5, 0x0040780D, 0x00407820, 0x00407838, 0x0040784E, 0x00407866, 0x0040787E, 0x00407894, 0x004078AC, 0x004078BE, 0x004078D4, 0x004078EC, 0x00407902, 0x0040791A, 0x0040792C, 0x00407945, 0x0040795B, 0x00407973, 0x00407988, 0x0040799A, 0x004079AC, 0x004079C5, 0x004079DB, 0x004079F3, 0x00407A0B, 0x00407A21, 0x00407A39, 0x00407A4B, 0x00407A61, 0x00407A79, 0x00407A8F, 0x00407AA7, 0x00407ABC, 0x00407AD5, 0x00407AEB, 0x00407B03, 0x00407B18, 0x00407B2E, 0x00407B46, 0x00407B57, 0x00407B6D, 0x00407B83, 0x00407B9B, 0x00407BB2, 0x00407BCA, 0x00407BDF, 0x00407BEF, 0x00407C0A, 0x00407C1A, 0x00407C2A, 0x00407C3E, 0x00407C50, 0x00407C69, 0x00407C81, 0x00407C97, 0x00407CAF, 0x00407CC7, 0x00407CDD, 0x00407CF5, 0x00407D07, 0x00407D1D, 0x00407D35, 0x00407D4B, 0x00407D64, 0x00407D7A, 0x00407D92, 0x00407DA7, 0x00407DBD, 0x00407DD5, 0x00407DEB, 0x00407E03, 0x00407E16, 0x00407E2C, 0x00407E42, 0x00407E5A, 0x00407E71, 0x00407E89, 0x00407E9E, 0x00407EAE, 0x00407EC9, 0x00407ED9, 0x00407EE9, 0x00407EFD, 0x00407F13, 0x00407F2B, 0x00407F3E, 0x00407F57, 0x00407F6F, 0x00407F85, 0x00407F9D, 0x00407FB5, 0x00407FCB, 0x00407FE3, 0x00407FF5, 0x0040800B, 0x00408023, 0x00408039, 0x00408052, 0x00408068, 0x00408080, 0x00408095, 0x004080AB, 0x004080C3, 0x004080D9, 0x004080F1, 0x00408104, 0x0040811A, 0x00408130, 0x00408148, 0x0040815F, 0x00408177, 0x0040818C, 0x0040819C, 0x004081B7, 0x004081C7, 0x004081D7, 0x004081EB, 0x00408201, 0x00408219, 0x0040822C, 0x00408245, 0x0040825D, 0x00408273, 0x0040828B, 0x004082A3, 0x004082B9, 0x004082D1, 0x004082E3, 0x004082F9, 0x00408311, 0x00408327, 0x00408340, 0x00408356, 0x0040836E, 0x00408383, 0x00408399, 0x004083B1, 0x004083C7, 0x004083DF, 0x004083F2, 0x00408408, 0x0040841E, 0x00408436, 0x0040844D, 0x00408465, 0x0040847A, 0x0040848A, 0x004084A5, 0x004084B5, 0x004084C5, 0x004084D9, 0x004084EF, 0x00408507, 0x0040851D, 0x00408536, 0x0040854E, 0x00408564, 0x0040857C, 0x00408591, 0x004085A7, 0x004085BF, 0x004085D3, 0x004085E5, 0x004085FE, 0x00408616, 0x0040862E, 0x00408646, 0x0040865E, 0x00408674, 0x0040868C, 0x0040869C, 0x004086B1, 0x004086C1, 0x004086DC, 0x004086EC, 0x004086FC, 0x00408710, 0x00408723, 0x0040873C, 0x00408752, 0x0040876A, 0x0040877A, 0x0040878F, 0x0040879F, 0x004087BA, 0x004087CA, 0x004087DA, 0x004087EE, 0x00408803, 0x00408813, 0x0040882E, 0x0040883E, 0x0040884E, 0x00408862, 0x00408878, 0x00408890, 0x004088A6, 0x004088BE, 0x004088D4, 0x004088EC, 0x00408902, 0x0040891A, 0x00408930, 0x00408948, 0x00408958, 0x0040896E, 0x00408986, 0x00408998, 0x004089A8, 0x004089B9, 0x004089CD, 0x004089E1, 0x004089F5, 0x00408A09, 0x00408A1A, 0x00408A2C, 0x00408A42, 0x00408A5A, 0x00408A6A, 0x00408A80, 0x00408A98, 0x00408AAD, 0x00408AC3, 0x00408ADB, 0x00408AF1, 0x00408B09, 0x00408B1F, 0x00408B37, 0x00408B4C, 0x00408B62, 0x00408B7A, 0x00408B90, 0x00408BA8, 0x00408BBE, 0x00408BD6, 0x00408BEA, 0x00408C00, 0x00408C18, 0x00408C2E, 0x00408C46, 0x00408C5C, 0x00408C74, 0x00408C89, 0x00408C9F, 0x00408CB7, 0x00408CCD, 0x00408CE5, 0x00408CF5, 0x00408D0B, 0x00408D23, 0x00408D35, 0x00408D45, 0x00408D56, 0x00408D6A, 0x00408D7E, 0x00408D92, 0x00408DA6, 0x00408DB7, 0x00408DC9, 0x00408DDF, 0x00408DF7, 0x00408E07, 0x00408E1D, 0x00408E35, 0x00408E4A, 0x00408E60, 0x00408E78, 0x00408E8E, 0x00408EA6, 0x00408EBC, 0x00408ED4, 0x00408EE8, 0x00408EFE, 0x00408F16, 0x00408F2C, 0x00408F44, 0x00408F5A, 0x00408F72, 0x00408F87, 0x00408F9D, 0x00408FB5, 0x00408FCB, 0x00408FE3, 0x00408FF9, 0x00409011, 0x00409026, 0x0040903C, 0x00409054, 0x0040906A, 0x00409082, 0x00409098, 0x004090B0, 0x004090C6, 0x004090DE, 0x004090F4, 0x0040910C, 0x00409122, 0x0040913A, 0x00409150, 0x00409168, 0x0040917E, 0x00409196, 0x004091A6, 0x004091BC, 0x004091D4, 0x004091E6, 0x004091F6, 0x00409207, 0x0040921B, 0x0040922F, 0x00409243, 0x00409257, 0x00409268, 0x0040927A, 0x00409290, 0x004092A8, 0x004092B8, 0x004092CE, 0x004092E6, 0x004092FA, 0x00409310, 0x00409328, 0x0040933E, 0x00409356, 0x0040936C, 0x00409384, 0x00409399, 0x004093AF, 0x004093C7, 0x004093DD, 0x004093F5, 0x0040940B, 0x00409423, 0x00409438, 0x0040944E, 0x00409466, 0x0040947C, 0x00409494, 0x004094AA, 0x004094C2, 0x004094D6, 0x004094EC, 0x00409504, 0x0040951A, 0x00409532, 0x00409542, 0x00409558, 0x00409570, 0x00409582, 0x00409592, 0x004095A3, 0x004095B7, 0x004095CB, 0x004095DF, 0x004095F3, 0x00409604, 0x00409616, 0x0040962C, 0x00409644, 0x00409654, 0x0040966A, 0x00409682, 0x00409697, 0x004096AD, 0x004096C5, 0x004096DB, 0x004096F3, 0x00409709, 0x00409721, 0x00409736, 0x0040974C, 0x00409764, 0x0040977A, 0x00409792, 0x004097A8, 0x004097C0, 0x004097D4, 0x004097EA, 0x00409802, 0x00409818, 0x00409830, 0x00409846, 0x0040985E, 0x00409873, 0x00409889, 0x004098A1, 0x004098B7, 0x004098CF, 0x004098E5, 0x004098FD, 0x00409913, 0x0040992B, 0x00409941, 0x00409959, 0x0040996F, 0x00409987, 0x0040999D, 0x004099B5, 0x004099CB, 0x004099E3, 0x004099F3, 0x00409A09, 0x00409A21, 0x00409A33, 0x00409A43, 0x00409A54, 0x00409A68, 0x00409A7C, 0x00409A90, 0x00409AA4, 0x00409AB5, 0x00409AC7, 0x00409ADD, 0x00409AF5, 0x00409B05, 0x00409B1B, 0x00409B33, 0x00409B48, 0x00409B5E, 0x00409B76, 0x00409B8C, 0x00409BA4, 0x00409BBA, 0x00409BD2, 0x00409BE6, 0x00409BFC, 0x00409C14, 0x00409C2A, 0x00409C42, 0x00409C58, 0x00409C70, 0x00409C85, 0x00409C9B, 0x00409CB3, 0x00409CC9, 0x00409CE1, 0x00409CF7, 0x00409D0F, 0x00409D24, 0x00409D3A, 0x00409D52, 0x00409D68, 0x00409D80, 0x00409D90, 0x00409DA6, 0x00409DBE, 0x00409DD0, 0x00409DE0, 0x00409DF1, 0x00409E05, 0x00409E19, 0x00409E2D, 0x00409E41, 0x00409E52, 0x00409E64, 0x00409E7A, 0x00409E92, 0x00409EA2, 0x00409EB8, 0x00409ED0, 0x00409EE4, 0x00409EFA, 0x00409F12, 0x00409F28, 0x00409F40, 0x00409F56, 0x00409F6E, 0x00409F83, 0x00409F99, 0x00409FB1, 0x00409FC7, 0x00409FDF, 0x00409FF5, 0x0040A00D, 0x0040A022, 0x0040A038, 0x0040A050, 0x0040A066, 0x0040A07E, 0x0040A094, 0x0040A0AC, 0x0040A0C0, 0x0040A0D6, 0x0040A0EE, 0x0040A104, 0x0040A11C, 0x0040A132, 0x0040A14A, 0x0040A160, 0x0040A178, 0x0040A18E, 0x0040A1A6, 0x0040A1BC, 0x0040A1D4, 0x0040A1EA, 0x0040A202, 0x0040A218, 0x0040A230, 0x0040A240, 0x0040A256, 0x0040A26E, 0x0040A280, 0x0040A290, 0x0040A2A1, 0x0040A2B5, 0x0040A2C9, 0x0040A2DD, 0x0040A2F1, 0x0040A302, 0x0040A314, 0x0040A32A, 0x0040A342, 0x0040A352, 0x0040A368, 0x0040A380, 0x0040A395, 0x0040A3AB, 0x0040A3C3, 0x0040A3D9, 0x0040A3F1, 0x0040A407, 0x0040A41F, 0x0040A434, 0x0040A44A, 0x0040A462, 0x0040A478, 0x0040A490, 0x0040A4A6, 0x0040A4BE, 0x0040A4D2, 0x0040A4E8, 0x0040A500, 0x0040A516, 0x0040A52E, 0x0040A544, 0x0040A55C, 0x0040A571, 0x0040A587, 0x0040A59F, 0x0040A5B5, 0x0040A5CD, 0x0040A5DD, 0x0040A5F3, 0x0040A60B, 0x0040A61D, 0x0040A62D, 0x0040A63E, 0x0040A652, 0x0040A666, 0x0040A67A, 0x0040A68E, 0x0040A69F, 0x0040A6B1, 0x0040A6C7, 0x0040A6DF, 0x0040A6EF, 0x0040A705, 0x0040A71D, 0x0040A732, 0x0040A748, 0x0040A760, 0x0040A776, 0x0040A78E, 0x0040A7A4, 0x0040A7BC, 0x0040A7D0, 0x0040A7E6, 0x0040A7FE, 0x0040A814, 0x0040A82C, 0x0040A842, 0x0040A85A, 0x0040A86F, 0x0040A885, 0x0040A89D, 0x0040A8B3, 0x0040A8CB, 0x0040A8E1, 0x0040A8F9, 0x0040A90E, 0x0040A924, 0x0040A93C, 0x0040A952, 0x0040A96A, 0x0040A980, 0x0040A998, 0x0040A9AE, 0x0040A9C6, 0x0040A9DC, 0x0040A9F4, 0x0040AA0A, 0x0040AA22, 0x0040AA38, 0x0040AA50, 0x0040AA66, 0x0040AA7E, 0x0040AA8E, 0x0040AAA4, 0x0040AABC, 0x0040AACE, 0x0040AADE, 0x0040AAEF, 0x0040AB03, 0x0040AB17, 0x0040AB2B, 0x0040AB3F, 0x0040AB50, 0x0040AB62, 0x0040AB78, 0x0040AB90, 0x0040ABA0, 0x0040ABB6, 0x0040ABCE, 0x0040ABE2, 0x0040ABF8, 0x0040AC10, 0x0040AC26, 0x0040AC3E, 0x0040AC54, 0x0040AC6C, 0x0040AC81, 0x0040AC97, 0x0040ACAF, 0x0040ACC5, 0x0040ACDD, 0x0040ACF3, 0x0040AD0B, 0x0040AD20, 0x0040AD36, 0x0040AD4E, 0x0040AD64, 0x0040AD7C, 0x0040AD92, 0x0040ADAA, 0x0040ADBE, 0x0040ADD4, 0x0040ADEC, 0x0040AE02, 0x0040AE1A, 0x0040AE2A, 0x0040AE40, 0x0040AE58, 0x0040AE6A, 0x0040AE7A, 0x0040AE8B, 0x0040AE9F, 0x0040AEB3, 0x0040AEC7, 0x0040AEDB, 0x0040AEEC, 0x0040AEFE, 0x0040AF14, 0x0040AF2C, 0x0040AF3C, 0x0040AF52, 0x0040AF6A, 0x0040AF7F, 0x0040AF95, 0x0040AFAD, 0x0040AFC3, 0x0040AFDB, 0x0040AFF1, 0x0040B009, 0x0040B01E, 0x0040B034, 0x0040B04C, 0x0040B062, 0x0040B07A, 0x0040B090, 0x0040B0A8, 0x0040B0BC, 0x0040B0D2, 0x0040B0EA, 0x0040B100, 0x0040B118, 0x0040B12E, 0x0040B146, 0x0040B15B, 0x0040B171, 0x0040B189, 0x0040B19F, 0x0040B1B7, 0x0040B1CD, 0x0040B1E5, 0x0040B1FB, 0x0040B213, 0x0040B229, 0x0040B241, 0x0040B259, 0x0040B26F, 0x0040B287, 0x0040B299, 0x0040B2AF, 0x0040B2C7, 0x0040B2DD, 0x0040B2F5, 0x0040B307, 0x0040B320, 0x0040B336, 0x0040B34E, 0x0040B363, 0x0040B37C, 0x0040B38C, 0x0040B39E, 0x0040B3AE, 0x0040B3BF, 0x0040B3D8, 0x0040B3EE, 0x0040B406, 0x0040B41D, 0x0040B433, 0x0040B44B, 0x0040B460, 0x0040B472, 0x0040B484, 0x0040B495, 0x0040B4A6, 0x0040B4B8, 0x0040B4CA, 0x0040B4DC, 0x0040B4EE, 0x0040B500, 0x0040B512, 0x0040B524, 0x0040B536, 0x0040B548, 0x0040B55A, 0x0040B56C, 0x0040B57E, 0x0040B590, 0x0040B5A2, 0x0040B5B4, 0x0040B5C6, 0x0040B5D8, 0x0040B5EA, 0x0040B5FC, 0x0040B60E, 0x0040B620, 0x0040B632, 0x0040B644, 0x0040B656, 0x0040B668, 0x0040B67A, 0x0040B68C, 0x0040B69E, 0x0040B6B0, 0x0040B6C2, 0x0040B6D4, 0x0040B6E6, 0x0040B6F7, 0x0040B709, 0x0040B71F, 0x0040B737, 0x0040B74D, 0x0040B765, 0x0040B77B, 0x0040B793, 0x0040B7AB, 0x0040B7C1, 0x0040B7D9, 0x0040B7F0, 0x0040B806, 0x0040B81E, 0x0040B833, 0x0040B845, 0x0040B857, 0x0040B868, 0x0040B879, 0x0040B88B, 0x0040B89D, 0x0040B8AF, 0x0040B8C1, 0x0040B8D3, 0x0040B8E5, 0x0040B8F7, 0x0040B909, 0x0040B91B, 0x0040B92D, 0x0040B93F, 0x0040B951, 0x0040B963, 0x0040B975, 0x0040B987, 0x0040B999, 0x0040B9AB, 0x0040B9BD, 0x0040B9CF, 0x0040B9E1, 0x0040B9F3, 0x0040BA05, 0x0040BA17, 0x0040BA29, 0x0040BA3B, 0x0040BA4D, 0x0040BA5F, 0x0040BA71, 0x0040BA83, 0x0040BA95, 0x0040BAA7, 0x0040BAB9, 0x0040BACA, 0x0040BADC, 0x0040BAF2, 0x0040BB0A, 0x0040BB20, 0x0040BB38, 0x0040BB4E, 0x0040BB66, 0x0040BB76, 0x0040BB86, 0x0040BB9C, 0x0040BBB4, 0x0040BBCA, 0x0040BBE2, 0x0040BBF3, 0x0040BC09, 0x0040BC21, 0x0040BC31, 0x0040BC41, 0x0040BC59, 0x0040BC6F, 0x0040BC87, 0x0040BC9C, 0x0040BCB5, 0x0040BCC9, 0x0040BCDD, 0x0040BD04, 0x0040BD18, 0x0040BD52, 0x0040BD6A, 0x0040BD7A, 0x0040BD91, 0x0040BDA1, 0x0040BDB1, 0x0040BDC9, 0x0040BDDD, 0x0040BDF2, 0x0040BE0F, 0x0040BE23, 0x0040BE38, 0x0040BE50, 0x0040BE60, 0x0040BE77, 0x0040BE87, 0x0040BE97, 0x0040BEAB, 0x0040BEC1, 0x0040BED9, 0x0040BEE9, 0x0040BEFD, 0x0040BF12, 0x0040BF2A, 0x0040BF3A, 0x0040BF51, 0x0040BF61, 0x0040BF71, 0x0040BF85, 0x0040BF99, 0x0040BFAE, 0x0040BFD5, 0x0040BFE9, 0x0040C009, 0x0040C021, 0x0040C031, 0x0040C048, 0x0040C058, 0x0040C068, 0x0040C078, 0x0040C087, 0x0040C096, 0x0040C0A5, 0x0040C0B4, 0x0040C0C3, 0x0040C0D2, 0x0040C0E1, 0x0040C0F0, 0x0040C0FF, 0x0040C10E, 0x0040C11D, 0x0040C12C, 0x0040C13B, 0x0040C14A, 0x0040C159, 0x0040C168, 0x0040C177, 0x0040C186, 0x0040C195, 0x0040C1A4, 0x0040C1B3, 0x0040C1C2, 0x0040C1D1, 0x0040C1E0, 0x0040C1EF, 0x0040C1FE };
ULONG badboy_sequence[] = { 0x00407000, 0x00407016, 0x0040702e, 0x00407041, 0x00407057, 0x0040706f, 0x00407085, 0x0040709d, 0x004070b3, 0x004070cb, 0x004070e1, 0x004070f9, 0x0040710f, 0x00407127, 0x0040713d, 0x00407155, 0x0040716b, 0x00407183, 0x00407193, 0x004071aa, 0x004071ba, 0x004071ca, 0x004071e0, 0x004071f8, 0x0040720e, 0x00407226, 0x00407236, 0x0040724d, 0x0040725d, 0x0040726d, 0x00407283, 0x0040729b, 0x004072ae, 0x004073cb, 0x004073e1, 0x004073f9, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x004074d8, 0x004074ee, 0x00407506, 0x0040751b, 0x0040752d, 0x0040753f, 0x00407555, 0x0040756d, 0x00407411, 0x00407427, 0x0040743f, 0x00407451, 0x00407467, 0x0040747f, 0x00407495, 0x004074ad, 0x004074bf, 0x00407585, 0x0040759b, 0x004075b3, 0x004075c5, 0x004075d5, 0x004075ea, 0x004075fa, 0x00407611, 0x00407621, 0x00407631, 0x00407647, 0x0040765f, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x0040773e, 0x00407754, 0x0040776c, 0x00407783, 0x00407799, 0x004077b1, 0x004077c7, 0x004077df, 0x004077f5, 0x0040780d, 0x00407820, 0x00407677, 0x0040768d, 0x004076a5, 0x004076b7, 0x004076cd, 0x004076e5, 0x004076fb, 0x00407713, 0x00407725, 0x00407838, 0x0040784e, 0x00407866, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00407945, 0x0040795b, 0x00407973, 0x00407988, 0x0040799a, 0x004079ac, 0x0040862e, 0x0040787e, 0x00407894, 0x004078ac, 0x004078be, 0x004078d4, 0x004078ec, 0x00407902, 0x0040791a, 0x0040792c, 0x00408646, 0x0040bdc9, 0x0040bddd, 0x0040bdf2, 0x0040be0f, 0x0040be23, 0x0040be38, 0x0040be50, 0x0040be60, 0x0040be77, 0x0040be87, 0x0040be97, 0x0040beab, 0x0040bec1, 0x0040bed9, 0x0040bee9, 0x0040befd, 0x0040bf12, 0x0040bf2a, 0x0040bf3a, 0x0040bf51, 0x0040bf61, 0x0040bf71, 0x0040bf85, 0x0040bf99, 0x0040bfae, 0x0040bfd5, 0x0040bfe9, 0x0040c009, 0x0040c021, 0x0040c031, 0x0040c048, 0x0040c058, 0x0040c068 };

PCHAR opcode_at_linear_sequence[] = { "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[03 00]", "[04 00]", "[06 00]", "[0D 00]", "[03 00]", "[0D 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[07 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[11 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[07 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[02 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[07 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[0A 00]", "[02 00]", "[07 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[07 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[07 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[07 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[07 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[07 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[10 00]", "[11 00]", "[0A 00]", "[02 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[02 00]", "[07 00]", "[07 00]", "[07 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[0A 00]", "[0A 00]", "[00 00]", "[0C 00]", "[0C 00]", "[04 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[17 00]", "[19 00]", "[14 00]", "[18 00]", "[18 00]", "[18 00]", "[18 00]", "[15 00]", "[17 00]", "[10 00]", "[11 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[10 00]", "[11 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[0A 00]", "[02 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[17 00]", "[17 00]", "[14 00]", "[14 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[15 00]", "[17 00]", "[10 00]", "[13 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[12 00]", "[0A 00]", "[17 00]", "[17 00]", "[14 00]", "[14 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[16 00]", "[15 00]", "[17 00]", "[10 00]", "[13 00]", "[10 00]", "[13 00]", "[10 00]", "[11 00]", "[0A 00]", "[0A 00]", "[10 00]", "[12 00]", "[10 00]", "[12 00]", "[0A 00]", "[10 00]", "[11 00]", "[0A 00]", "[0A 00]", "[07 00]", "[10 00]", "[12 00]", "[0A 00]", "[02 00]", "[03 00]", "[03 00]", "[0D 00]", "[03 00]", "[0D 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[07 00]", "[04 00]", "[06 00]", "[0D 00]", "[04 00]", "[06 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[03 00]", "[10 00]", "[12 00]", "[0A 00]", "[04 00]", "[06 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[03 00]", "[04 00]", "[06 00]", "[0D 00]", "[03 00]", "[0D 00]", "[12 00]", "[0A 00]", "[01 00]", "[0C 00]", "[0C 00]", "[0A 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]", "[00 00]"};

char dialines[sizeof(linear_sequence)/sizeof(ULONG)][65536] = {};

ULONG find_in_linear_sequence(ULONG ul)
{
    for(int i=0; i<sizeof(linear_sequence)/sizeof(ULONG); ++i)
        if(linear_sequence[i] == ul)
            return i;

    return -1;
}

int was_sequential_transition(ULONG start, ULONG end)
{
    int i = find_in_linear_sequence(start);

    if(i==-1)
        printf("WTF WTF WTFFFFFFFFFFFFFFFFFFFUUUUUUUUUUUUUck!\n");

    if(linear_sequence[i+1] == end)
        return 1;
    
    return 0;
}

void main(void)
{
    for(int i=0; i<(sizeof(badboy_sequence)/sizeof(ULONG)) - 1; i++)
    {
        char *str_start = "-+";
        char *str_mid = " |";
        char *str_end = "<+";

        ULONG this_addr = badboy_sequence[i];
        ULONG next_addr = badboy_sequence[i+1];

        if(!was_sequential_transition(this_addr, next_addr))
        {
            int index_start = find_in_linear_sequence(this_addr);
            int index_end = find_in_linear_sequence(next_addr);

            for(int j=0; j<(sizeof(linear_sequence)/sizeof(ULONG)); ++j)
            {
                if(j==index_start)
                    strcat(dialines[j], str_start);
                else if(j==index_end)
                    strcat(dialines[j], str_end);
                else if(abs(index_start - j) + abs(index_end - j) == abs(index_start - index_end))
                    strcat(dialines[j], str_mid);
                else
                    strcat(dialines[j], "  ");
            }
        }
    }

    // print the results
    for(int j=0; j<(sizeof(linear_sequence)/sizeof(ULONG)); ++j)
        printf("%08X: %s %s\n", linear_sequence[j], opcode_at_linear_sequence[j], dialines[j]);
}
